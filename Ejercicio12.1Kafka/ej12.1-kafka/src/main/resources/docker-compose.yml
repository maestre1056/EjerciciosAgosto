version: '3.7'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks: #Red de docker a la que se conecta
      - kafkaNetwork
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092" #Puerto del Host:Puerto del contenedor
    networks: #Red de docker a la que se conecta
      - kafkaNetwork
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: localhost


  app1:
    image: library/ej12.1-kafka:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    networks: #Red de docker a la que se conecta
      - kafkaNetwork
    environment:
      SPRING.PROFILES.ACTIVE: app1
      SERVER.PORT: 8080
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:29092

  app2:
    image: library/ej12.1-kafka:0.0.1-SNAPSHOT
    ports:
      - "8081:8081"
    depends_on:
      - kafka
    networks: #Red de docker a la que se conecta
      - kafkaNetwork
    environment:
      SPRING.PROFILES.ACTIVE: app2
      SERVER.PORT: 8081
      SPRING.KAFKA.BOOTSTRAP-SERVERS: kafka:29092

networks:
  kafkaNetwork: